---
- name: Include Docker Hub credentials
  ansible.builtin.include_vars:
    file: group_vars/secrets.yml
    name: secrets

- name: Docker Login
  ansible.builtin.command:
    cmd: echo {{ secrets.dockerhub_password }} | docker login -u {{ secrets.dockerhub_username }} --password-stdin

- name: Install Docker
  ansible.builtin.apt:
    name: docker.io
    state: present
    update_cache: true

- name: Start Docker and enable at boot
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true

- name: Pull Jenkins Docker image
  community.docker.docker_image:
    name: jenkins/jenkins
    tag: lts
    source: pull

- name: Run Jenkins container
  community.docker.docker_container:
    name: jenkins
    image: jenkins/jenkins:lts
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/jenkins_home

- name: Create casc_configs directory in Jenkins container
  ansible.builtin.command:
    cmd: docker exec jenkins mkdir -p /var/jenkins_home/casc_configs

- name: Copy JCasC configuration file to remote host
  ansible.builtin.copy:
    src: "files/jenkins-casc.yml"
    dest: "/tmp/jenkins-casc.yml"
    mode: '0644'
  become: yes

- name: Copy JCasC configuration file to Jenkins server
  ansible.builtin.command: docker cp /tmp/jenkins-casc.yml jenkins:/var/jenkins_home/casc_configs/jenkins.yml
  become: yes

- name: Install Jenkins plugins
  ansible.builtin.command: >
    docker exec jenkins bash -c 'jenkins-plugin-cli --plugins git credentials job-dsl configuration-as-code github-branch-source'
  register: result
  changed_when: result.stdout.find('No updates found') == -1
  until: result.rc == 0
  retries: 5
  delay: 60

- name: Restart Jenkins container
  community.docker.docker_container:
    name: jenkins
    state: started
    restart: true
